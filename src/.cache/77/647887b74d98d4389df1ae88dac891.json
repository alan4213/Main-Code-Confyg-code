{"id":"node_modules/@noble/hashes/sha512.js","dependencies":[{"name":"C:\\Users\\alanb\\confyg\\src\\package.json","includedInParent":true,"mtime":1682602329713},{"name":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\package.json","includedInParent":true,"mtime":1682602323037},{"name":"./_sha2.js","loc":{"line":4,"column":27,"index":184},"parent":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\sha512.js","resolved":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\_sha2.js"},{"name":"./_u64.js","loc":{"line":5,"column":26,"index":225},"parent":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\sha512.js","resolved":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\_u64.js"},{"name":"./utils.js","loc":{"line":6,"column":27,"index":266},"parent":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\sha512.js","resolved":"C:\\Users\\alanb\\confyg\\src\\node_modules\\@noble\\hashes\\utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@noble/hashes/sha512.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}}],"sources":{"node_modules/@noble/hashes/sha512.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n"},"lineCount":211}},"error":null,"hash":"60282eaf32e87e14b9b79248a8ade2bc","cacheData":{"env":{}}}